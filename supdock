#!/usr/bin/env ruby
require 'tty-prompt'

$prompt = TTY::Prompt.new

banner = <<-EOS
What's up Dock(er)? Usage: supdock [options] <filenames>
Where [options] are: 
  - ps
  - images
  - stop
  - rm
  - rmi
EOS
version = '0.0.1'

def create_selection(ids, names)
  selection = []
  ids.each_with_index do |id,index|
    selection.push("#{id.to_s} - #{names[index].to_s}")
  end
  return selection
end

case ARGV[0]
  when 'help', '-h', '--help'
    puts banner
  when 'version', '-v', '--version'
    puts version
  when 'ps'
    system "docker ps #{ARGV[1]}"
  when 'images'
    system 'docker images'
  when 'stop'
    ids = `docker ps | awk '{print $1}' | tail -n +2`.split
    names = `docker ps | awk '{print $NF}' | tail -n +2`.split
    container = $prompt.select('Which container would you like to stop?', create_selection(ids,names))
    `docker stop #{container.split('-').first}`
    puts "Container #{container} was stopped..."
  when 'rm'
    ids = `docker ps -a | awk '{print $1}' | tail -n +2`.split
    names = `docker ps -a | awk '{print $NF}' | tail -n +2`.split
    container = $prompt.select('Which container would you like to remove?', create_selection(ids,names))
    `docker rm -f #{container.split('-').first}`
    puts "Container #{container} was removed..."
  when 'rmi'
    ids = `docker images | awk '{print $3}' | tail -n +2`.split
    names = `docker images | awk '{print $1}' | tail -n +2`.split
    image = $prompt.select('Which image would you like to remove?', create_selection(ids,names))
    `docker rmi -f #{image.split('-').first}`
    puts "Image #{image} was removed..."
  when 'history'
    ids = `docker images | awk '{print $3}' | tail -n +2`.split
    names = `docker images | awk '{print $1}' | tail -n +2`.split
    image = $prompt.select('Which image would you like to see the history of?', create_selection(ids,names))
    system "docker history #{image.split('-').first}"
  else
    system "docker #{ARGV[0]}"
  end
